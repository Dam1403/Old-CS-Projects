
TEST: n=9, seed=100000, p=0.5
Time to generate the graph: 20 milliseconds

The graph as an adjacency matrix:

 0   0   0   5   4   0   0   0   0  

 0   0   5   7   4   2   0   0   0  

 0   5   0   9   3   0   0   0   2  

 5   7   9   0   8   0   7   0   4  

 4   4   3   8   0   9   2   0   0  

 0   2   0   0   9   0   3   3   6  

 0   0   0   7   2   3   0   0   0  

 0   0   0   0   0   3   0   0   0  

 0   0   2   4   0   6   0   0   0  

The graph as an adjacency list:
0-> 3(5) 4(4) 
1-> 2(5) 3(7) 4(4) 5(2) 
2-> 1(5) 3(9) 4(3) 8(2) 
3-> 0(5) 1(7) 2(9) 4(8) 6(7) 8(4) 
4-> 0(4) 1(4) 2(3) 3(8) 5(9) 6(2) 
5-> 1(2) 4(9) 6(3) 7(3) 8(6) 
6-> 3(7) 4(2) 5(3) 
7-> 5(3) 
8-> 2(2) 3(4) 5(6) 

Depth-First Search:
Vertices:  
 0 1 2 3 4 5 6 7 8
Predecessors: 
-1 3 1 0 2 4 5 5 5 
===================================
KRUSKAL WITH MATRIX USING INSERTION SORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 9 milliseconds

===================================
KRUSKAL WITH MATRIX USING COUNT SORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 0 milliseconds

===================================
KRUSKAL WITH MATRIX USING QUICKSORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 0 milliseconds

===================================
KRUSKAL WITH LIST USING INSERTION SORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 1 milliseconds

===================================
KRUSKAL WITH LIST USING COUNT SORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 0 milliseconds

===================================
KRUSKAL WITH LIST USING QUICKSORT
1 5 weight = 2
2 8 weight = 2
4 6 weight = 2
2 4 weight = 3
5 6 weight = 3
5 7 weight = 3
0 4 weight = 4
3 8 weight = 4

Total weight of MST using Kruskal: 23
Runtime: 1 milliseconds

===================================
PRIM WITH ADJACENCY MATRIX
5 1 weight = 2
4 2 weight = 3
8 3 weight = 4
0 4 weight = 4
6 5 weight = 3
4 6 weight = 2
5 7 weight = 3
2 8 weight = 2

Total weight of MST using Prim: 23
Runtime: 0 milliseconds

===================================
PRIM WITH ADJACENCY LIST
5 1 weight = 2
4 2 weight = 3
8 3 weight = 4
0 4 weight = 4
6 5 weight = 3
4 6 weight = 2
5 7 weight = 3
2 8 weight = 2

Total weight of MST using Prim: 23
Runtime: 0 milliseconds
